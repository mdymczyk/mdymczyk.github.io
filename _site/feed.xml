<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rants about programming...</title>
    <description>Coding, Japan and general rants from Toyko...
</description>
    <link>http://www.puroguramingu.com/</link>
    <atom:link href="http://www.puroguramingu.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 27 Feb 2016 12:34:04 +0900</pubDate>
    <lastBuildDate>Sat, 27 Feb 2016 12:34:04 +0900</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Embedded Elasticsearch 2.2 vs Groovy</title>
        <description>&lt;p&gt;
A few weeks ago &lt;a href=&quot;https://www.elastic.co/blog/elasticsearch-2-2-0-and-2-1-2-and-1-7-5-released&quot;&gt;Elasticsearch 2.2.0&lt;/a&gt; was released.
This is a pretty important release if you are using, either for production or only for testing like me, the embedded version of ES, create it with &lt;a href=&quot;http://javadoc.kyubu.de/elasticsearch/v2.2.0/org/elasticsearch/node/NodeBuilder.html&quot;&gt;NodeBuilder&lt;/a&gt; and you&#39;re also using ES plugins.
As we know plugins were, up until now, simply auto detected if found on the classpath but this has changed in &lt;a href=&quot;https://github.com/elastic/elasticsearch/pull/13055&quot;&gt;2.1&lt;/a&gt;. This change will also affect you now 
if you are using Groovy scripts somewhere in your Elasticsearch as &lt;a href=&quot;https://github.com/elastic/elasticsearch/pull/13834&quot;&gt;per this ticket&lt;/a&gt; groovy plugin has been taken out of core and moved into a separate module and might surprise you with a &lt;b&gt;script_lang not supported [groovy]&lt;/b&gt; even though you haven&#39;t done anything (except for upgrading the ES version).
This is not a problem when using standalone ES as the jar is in the &lt;b&gt;module&lt;/b&gt; directory by default but with embedded ES we don&#39;t have it. Simply putting &lt;b&gt;org.elasticsearch.module:lang-groovy&lt;/b&gt; on the CP won&#39;t work, so what do we do?
There are (at least) 3 options.
&lt;/p&gt;

&lt;h3&gt;1. Be proper.&lt;/h3&gt;

&lt;p&gt;
Stop using in-memory ES, install it as &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/_installation.html&quot;&gt;you&#39;d normally do&lt;/a&gt; and use it instead. As I mentioned you do not need to &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/plugins/2.2/installation.html&quot;&gt;install&lt;/a/&gt; the groovy plugin as
it comes bundled with the distribution in the &lt;b&gt;modules&lt;/b&gt; folder and ES automatically detects it. This is obviously a bit annoying approach especially for unit/integration tests so...
&lt;/p&gt;

&lt;h3&gt;2. Be semi-proper.&lt;/h3&gt;

&lt;p&gt;
When you are creating and starting a node with node builder you can specify the home directory. 
In case you&#39;re using ES for testing you can make it a temporary folder. 
With this you can download your plugin (jar, plugin descriptor etc. have a look at the module directory for clues) of choice, put it in your test resource directory and simply copy it to your ES home directory&#39;s &lt;b&gt;modules&lt;/b&gt; folder. Then when the node starts up ES will automatically detect the plugin. It would go something like this:
&lt;/p&gt;

&lt;pre class=&quot;brush: scala&quot;&gt;
import org.apache.commons.io.FileUtils

private val tempFile = File.createTempFile(&quot;elasticsearchtests&quot;, &quot;tmp&quot;)
private val homeDir = new File(tempFile.getParent + &quot;/&quot; + UUID.randomUUID().toString)

homeDir.mkdir()
homeDir.deleteOnExit()
tempFile.deleteOnExit()

FileUtils.copyURLToFile(
  getClass.getResource(&quot;/lang-groovy&quot;),
  new File(homeDir.getAbsolutePath + &quot;/modules/lang-groovy&quot;)
)

private val settings = Settings.settingsBuilder()
	.put(&quot;path.home&quot;, homeDir.getAbsolutePath)
	// other settings
	.build()

val node = NodeBuilder.nodeBuilder().settings(settings).node()
&lt;/pre&gt;

&lt;p&gt;This should work as ES does automatically check the &lt;b&gt;modules&lt;/b&gt; directory for plugins. 
The problem is that you need to manually manage the plugin files (put them in test/resource and update them every time you want to change versions) so this leaves us with the third option...

&lt;h3&gt;3. Be a rebel.&lt;/h3&gt;

&lt;p&gt;
The &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/client/java-api/current/transport-client.html&quot;&gt;TransportClient&lt;/a&gt; still has the ability to find plugins on the classpath which means there&#39;s probably a way we could abuse it!
And indeed there is one - the &lt;a href=&quot;http://javadoc.kyubu.de/elasticsearch/v2.2.0/org/elasticsearch/node/Node.html&quot;&gt;Node&lt;/a&gt; class has a protected constructor which still accepts classpath plugins! This means we can skip the NodeBuilder and make our own little Node:
&lt;/p&gt;
&lt;pre class=&quot;brush: scala&quot;&gt;
class ClasspathESNode(
  settings: Environment,
  version: Version,
  classpathPlugins: util.Collection[Class[_ &lt;: Plugin]])
  extends Node(settings, version, classpathPlugins) {}

private val settings = Settings.settingsBuilder()
	// settings
	.build()

val node = new ClasspathESNode(
    InternalSettingsPreparer.prepareEnvironment(settings, null), 
    Version.CURRENT, 
    Collections.singletonList[Class[_ &lt;: Plugin]](classOf[GroovyPlugin])
  ).start()
&lt;/pre&gt;

&lt;p&gt;You probably can extend the NodeBuilder to return the above so you get the whole fluent API goodness, personally I don&#39;t need it for now.&lt;/p&gt;

&lt;p&gt;Just to make it clear, ES guys had pretty good reasons to do what they did (java security and jar hell), if you can you should go with the proper way of handling plugins! I do not advice using methods 2 and 3 in any other scenario than testing. Also should you use the above workarounds it&#39;s on your own accord and please don&#39;t complain should anything bad happen :-)&lt;/p&gt;


</description>
        <pubDate>Sun, 28 Feb 2016 00:00:00 +0900</pubDate>
        <link>http://www.puroguramingu.com/2016/02/28/elasticsearch-2.2.html</link>
        <guid isPermaLink="true">http://www.puroguramingu.com/2016/02/28/elasticsearch-2.2.html</guid>
        
        <category>elasticsearch</category>
        
        <category>elastic</category>
        
        <category>groovy</category>
        
        
      </item>
    
      <item>
        <title>Spark DOs, DONTs</title>
        <description>&lt;p&gt;
Finally after using &lt;a href=&quot;http://spark.apache.org/&quot;&gt;Apache Spark&lt;/a&gt; internally in standalone mode
we had a reason to deploy in on &lt;a hreaf=&quot;https://aws.amazon.com/elasticmapreduce/&quot;&gt;Amazon&#39;s EMR&lt;/a&gt; to do some funky machine learning with &lt;a href=&quot;http://spark.apache.org/docs/latest/mllib-guide.html&quot;&gt;MLlib&lt;/a&gt;!
&lt;/p&gt;
&lt;p&gt;
This brought a lot of pain, swearing and tears but ended up with a cheerful &quot;HELL YEAH!&quot;. Here&#39;s a semi-random list
of things I wish I&#39;d known before I started. Some are Spark related, some will concern only Scala users and some are just
general tips.
&lt;/p&gt;

&lt;h3&gt;1. DON&#39;T use the App trait!&lt;/h3&gt;

&lt;p&gt;This isn&#39;t really a Spark problem but can result in &lt;b&gt;NullPointerExceptions&lt;/b&gt; as discussed &lt;a href=&quot;https://issues.apache.org/jira/browse/SPARK-4170&quot;&gt;in this issue&lt;/a&gt; and believe me, it&#39;s not easy to debug/figure out what&#39;s happening.
The problem lies in late initialisation of variables, in the example below &lt;b&gt;str1&lt;/b&gt; will be a &lt;b&gt;null&lt;/b&gt; on workers! But will work well on the driver...
Even simple apps like the one in the issue report will have problems:&lt;/p&gt;
&lt;pre class=&quot;brush: scala&quot;&gt;
object DemoBug extends App {
    val conf = new SparkConf()
    val sc = new SparkContext(conf)

    val rdd = sc.parallelize(List(&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;))
    val str1 = &quot;A&quot;

    val rslt = rdd.filter(x =&gt; { str1 != null &amp;&amp; x != &quot;A&quot; }).count
    
    println(s&quot;DemoBug: rslt = $rslt&quot;)
}
&lt;/pre&gt;

&lt;p&gt;Will produce:&lt;/p&gt;

&lt;pre class=&quot;brush: scala&quot;&gt;
DemoBug: rslt = 0
&lt;/pre&gt;

&lt;p&gt;Instead use: &lt;pre class=&quot;brush: scala&quot;&gt;def main(args:Array[String])&lt;/pre&gt;&lt;/p&gt;

&lt;h3&gt;2. DO use a lot of logging.&lt;/h3&gt;
&lt;p&gt;Logging in moderation is always a good thing and might sound pretty obvious, but... With Spark, and well Hadoop in general, it&#39;s a vital part of your app.
Debugging Spark jobs in production is ridiculously hard and well placed logging messages might save you from a redeploy, which might takes minutes or even hours.
Remember, though, that many loggers are not Serializable so you might need to use one of the tricks I wrote about here.&lt;/p&gt;

&lt;h3&gt;3a. DO pay attention to serialization.&lt;/h3&gt;

&lt;p&gt;Spark sends a lot of objects over the wire, that&#39;s why plenty of your classes will have to implement the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html&quot;&gt;Serializable&lt;/a&gt; interface. For this reason this will fail:&lt;/p&gt;

&lt;pre class=&quot;brush: scala&quot;&gt;
class NotSerializablePrinter { def print(msg:String) = println(msg) }

val printer = new NotSerializablePrinter
val rdd = sc.parallelize(Array(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;))
rdd.foreach(msg =&gt; printer.print(msg))
&lt;/pre&gt;

&lt;p&gt;You&#39;ll get a beautiful &lt;b&gt;java.io.NotSerializableException: $iwC$$iwC$NotSerializableClass&lt;/b&gt;. That&#39;s because everything inside the RDD object methods is sent to workers to be carried out and has to transfered over the wire. Since the printer class isn&#39;t it cannot be sent from the driver node to the workers.&lt;/p&gt;

&lt;p&gt;Whenever you see this exception you have a few options:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The easiest is to make the class serializable by &lt;b&gt;class NotSerializablePrinter extends Serializable&lt;/b&gt;. Do remember that all the member variables also have to be serializable, though!&lt;/li&gt;
&lt;li&gt;Sometimes you cannot modify the code, in that case you can create the object on the worker nodes in the closure itself, the below code works as no objects are sent over the wire:&lt;/li&gt;
&lt;pre class=&quot;brush: scala&quot;&gt;
rdd.foreach(msg =&gt; new NotSerializablePrinter.print(msg))
&lt;/pre&gt;
&lt;li&gt;The problem above is that you create a new object with each iteration. To work around this you can create a singleton object on each worker, in Java that would require making a &lt;b&gt;static&lt;/b&gt; variable. In Scala this should work:&lt;/li&gt;
&lt;pre class=&quot;brush: scala&quot;&gt;
object printer {
  val instance = new NotSerializablePrinter
}
rdd.foreach(msg =&gt; printer.instance.print(msg))
&lt;/pre&gt;
&lt;/ol&gt;

&lt;h3&gt;3b. DO use non-default serializers.&lt;/h3&gt;
&lt;p&gt;
Java serialization, which is the default serialization method in Spark, isn&#39;t the fastest, don&#39;t think we need to discuss it. But if you still don&#39;t believe me, here: &lt;img src=&quot;http://chart.apis.google.com/chart?chtt=totalTime&amp;chf=c%7C%7Clg%7C%7C0%7C%7CFFFFFF%7C%7C1%7C%7C76A4FB%7C%7C0%7Cbg%7C%7Cs%7C%7CEFEFEF&amp;chs=689x430&amp;chd=t:1263.0,1552.0,1747.0,1878.0,1966.5,2119.0,2203.0,2559.5,2706.0,2963.0,3585.5,3912.5,4182.5,4186.5,5948.5,7337.5,9050.5,10078.0,12404.0,12931.0,18031.0,28068.5&amp;chds=0,30875.350000000002&amp;chxt=y&amp;chxl=0:%7Cjava%7Cjson/jackson-databind%7CJsonMarshaller%7Cxstream%20%28stax%20with%20conv%29%7Cbinaryxml/FI%7Chessian%7Cjavolution%20xmlformat%7Cstax/woodstox%7Cprotostuff-json%7Cstax/aalto%7Cprotostuff-numeric-json%7Cjson%20%28jackson%29%7Cthrift%7Cavro-generic%7Csbinary%7Cavro-specific%7Cactivemq%20protobuf%7Cprotobuf%7Ckryo%7Ckryo-optimized%7CMessagePack%20%28buggy%29%7Cjava%20%28externalizable%29&amp;chm=N%20*f*,000000,0,-1,10&amp;lklk&amp;chdlp=t&amp;chco=660000%7C660033%7C660066%7C660099%7C6600CC%7C6600FF%7C663300%7C663333%7C663366%7C663399%7C6633CC%7C6633FF%7C666600%7C666633%7C666666&amp;cht=bhg&amp;chbh=10&amp;nonsense=aaa.png&quot;/&gt;
&lt;/p&gt;
&lt;p&gt;
Fortunately you can very easily switch from native Java serialization to &lt;a href=&quot;https://github.com/EsotericSoftware/kryo&quot;&gt;Kryo&lt;/a&gt; by setting in &lt;b&gt;SparkConf&lt;/b&gt; the property &lt;b&gt;&quot;spark.serializer&quot;&lt;/b&gt; to &lt;b&gt;&quot;org.apache.spark.serializer.KryoSerializer&quot;&lt;/b&gt;.
This will be used both during &lt;b&gt;shuffles&lt;/b&gt; between worker nodes and during serialization &lt;b&gt;to disk&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
Kryo does require some more configuration and has some limitations, go check out the &lt;a href=&quot;https://spark.apache.org/docs/latest/tuning.html#data-serialization&quot;&gt;spark documentation&lt;/a&gt; to know what you need to exactly do. Actually read that whole part of the doc right now!
&lt;/p&gt;

&lt;h3&gt;4. DON&#39;T use different modes/schedulers/data for testing and prod!&lt;/h3&gt;
&lt;p&gt;The thought of using standalone scheduler+client mode for tests and YARN/Mesos+cluster mode in prod sounds very tempting.
Same goes for testing your Spark apps on smaller datasets than the ones in production. Do not give into that temptation as a false one, it is :-)
There are scheduler specific bugs like &lt;a href=&quot;https://issues.apache.org/jira/browse/SPARK-12494&quot;&gt;this one&lt;/a&gt; I encountered. Everything worked fine in local mode on a small dataset. A big dataset+Yarn = disaster. 

&lt;h3&gt;5. DO cache/persist&lt;/h3&gt;
&lt;p&gt;
Consider this piece of code:
&lt;/p&gt;
&lt;pre class=&quot;brush: scala&quot;&gt;
import org.apache.spark.mllib.clustering.{KMeans, KMeansModel}
import org.apache.spark.mllib.linalg.Vectors

// Declare and initialise the spark context

// Load a HUGE dataset
val data = sc.textFile(&quot;kmeans_data.txt&quot;)
val parsedData = data.map(s =&gt; Vectors.dense(s.split(&#39; &#39;).map(_.toDouble)))

val clusters = KMeans.train(parsedData, 4, 500)
&lt;/pre&gt;

&lt;p&gt;All fine and dandy, right? Wrong! It&#39;s extremely important to read the docs of every method you use to see if it uses your RDD more than once! In the above case &lt;b&gt;parsedData&lt;/b&gt; will be re-read from the file and the whole RDD will be recreated hundreds of time inside the &lt;b&gt;KMeans.train&lt;/b&gt; method!&lt;/p&gt;
&lt;p&gt;While writing your algorithms and using third party libraries remember about &lt;a href=&quot;https://spark.apache.org/docs/latest/api/java/org/apache/spark/rdd/RDD.html#persist(org.apache.spark.storage.StorageLevel)&quot;&gt;persist(level)&lt;/a&gt; and the shorthand version &lt;a href=&quot;https://spark.apache.org/docs/latest/api/java/org/apache/spark/rdd/RDD.html#cache()&quot;&gt;cache()&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The above methods store computed RDD either &lt;b&gt;in memory&lt;/b&gt; (faster access) or &lt;b&gt;in memory and on disk&lt;/b&gt; (more space but slower) in a &lt;b&gt;serialized&lt;/b&gt; (less storage, more CPU intensive) or &lt;b&gt;non serialized&lt;/b&gt; format so Spark will not recreate it every time the RDD is used. My advice is to, if possible, use the memory only storage level, you really don&#39;t want to hit the disk although that&#39;s not always an option.&lt;/p&gt;

&lt;p&gt;The above example can be quickly fixed by adding one line (or calling the method during the assignment) of code before the KMeans call:&lt;/p&gt;
&lt;pre class=&quot;brush: scala&quot;&gt;
val parsedData = data.map(s =&gt; Vectors.dense(s.split(&#39; &#39;).map(_.toDouble)))
parsedData.cache()
&lt;/pre&gt;

&lt;h3&gt;6. BONUS1: AWS EMR mode....&lt;/h3&gt;
&lt;p&gt;It seems that AWS EMR only supports natively YARN scheduling and there&#39;s no (easy) way to use the spark standalone mode so if you, for some reason, need to use it better go with &lt;a hreaf=&quot;http://spark.apache.org/docs/latest/ec2-scripts.html&quot;&gt;spark ec2 scripts&lt;/a&gt; and save yourselve a lot of trouble.

&lt;h3&gt;7. BONUS2: ES HADOOP&lt;/h3&gt;
&lt;p&gt;
&lt;a hreaf=&quot;https://github.com/elastic/elasticsearch-hadoop&quot;&gt;Elasticsearch Hadoop&lt;/a&gt; is a very cool library which will allow you to read data from &lt;a hreaf=&quot;https://www.elastic.co/&quot;&gt;Elasticsearch&lt;/a&gt; as a DataFrame or an RDD.
Two pieces of advice here:
&lt;ol&gt;
&lt;li&gt;Remember that each field in ES is by default an array, even without any additional config? Well yes, it can be a singular value or an array straight out of the box! If you have arrays in your documents better use &lt;b&gt;es.read.field.as.array.include&lt;/b&gt; option which is fully described in the &lt;a hreaf=&quot;https://www.elastic.co/guide/en/elasticsearch/hadoop/master/configuration.html&quot;&gt;documentation.&lt;/a&gt; since ES-Hadoop might have a hard time figuring this out.&lt;/li&gt;
&lt;li&gt;Even though all the issues regarding &lt;b&gt;Position for &#39;FIELDNAME&#39; not found in row; typically this is caused by a mapping inconsistency&lt;/b&gt; regarding nested fields I have found in the tracker seem to be resolved I still had some problems when using DataFrames. If you encounter them consider using &lt;b&gt;EsSpark.esRDD&lt;/b&gt; and going with an RDD instead...&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;

&lt;p&gt;
That&#39;s it for now, not much but hope it will make people&#39;s life easier! Now is the time to make the whole thing actually fast so be on a look out for performance tuning tips!
&lt;/p&gt;</description>
        <pubDate>Fri, 26 Feb 2016 00:00:00 +0900</pubDate>
        <link>http://www.puroguramingu.com/2016/02/26/spark-dos-donts.html</link>
        <guid isPermaLink="true">http://www.puroguramingu.com/2016/02/26/spark-dos-donts.html</guid>
        
        
      </item>
    
      <item>
        <title>On the state of IT recruitment...</title>
        <description>&lt;p&gt;You can call me a weirdo but I don&#39;t have many non-IT friends. Most of the people I hang out with are somehow related to software development etc. But the few non-IT friends I have seem to not be able to comprehend what I&#39;m saying when talking about how recruitment for a software engineer position looks like. Somehow a very basic, in my opinion, idea of studying for an interview just doesn&#39;t reach them. &quot;What do you need to study? You are doing a similar job now, right? You just need to show what cool stuff you did, that&#39;s enough right?&quot;. And it recently hit me. They are right! So what&#39;s the problem?&lt;/p&gt; &lt;h3&gt;Being too cool for school&lt;/h3&gt;&lt;p&gt;I&#39;m not sure about other industries but in IT if X, yes this cool X everyone is talking about and for which everyone wants to work, is doing something we immediately need to do the same thing! Yes I&#39;m looking at you Google/MS/Facebook and your algo style interviews. Even though most of the companies don&#39;t need such skills and/or are not capable of attracting (due to budget etc. constraints) people who are capable of solving those. But that&#39;s not the only problem. Github (and other such services) instead of your resume is yet another example. Some people started using this strategy therefore so should we! Well in this case it actually makes sense since what&#39;s better to evaluate a coder than looking at his code? The problem is that this requires you to spend your spare time coding on open source stuff. Cool when you&#39;re before 25-30, not so fun when you have a family and responsibilities.&lt;/p&gt; &lt;h3&gt;Algorithmic interviews&lt;/h3&gt;&lt;p&gt;Regarding this point I could write a short novel. This is really the thing I despise the most about current interview standards. EVERYONE asks them. Because they are cool. They will evaluate the candidates *thinking process*, they will show you how bright the candidate is, is he thinking in a logical way, can he utilise the pieces of his knowledge to solve a new, complex problem. Perfect! Or not. Or it will just show you that the poor guy has no idea how to solve this particular problem which requires trick Y to be used together with data structure K. But it&#39;s all cool because you knew the trick so it&#39;s obviously a trivial problem. Testing for algorithmical/data structure knowledge sure is damn important, hell I used to do that too! But it&#39;s one thing to check if someone has a good grasp of it, it&#39;s another thing to ask ridiculous TopCoder style questions for a position that won&#39;t require you to solve those on a daily basis!&lt;/p&gt; &lt;h3&gt;There&#39;s no empathy&lt;/h3&gt;&lt;p&gt;In my previous jobs I often overheard some employees mock the people they just interviewed &quot;hahaha how could he not know P?! [...] did you hear his response to A? he tried to to it with E, with E! (laughter)&quot; the thing is in most cases those were pretty valid answers. Maybe not optimal, maybe not the cleanest but for crying out loud the poor guy (or girl) was locked with some strangers in a room for 45-60mins, nervous as hell. Cut the poor soul some slack. Interviewing isn&#39;t about you feeling superior, it&#39;s about evaluating a candidate. I think most people performing interview forgot how it feels to be on the other side. I&#39;m not telling you to go easy on the candidates, just remember that it&#39;s very stressful and that sometimes small stupid mistakes will appear which wouldn&#39;t happen in daily life.&lt;/p&gt; &lt;h3&gt;One question interviews&lt;/h3&gt;&lt;p&gt;This is usually, but not always, related to &quot;algorithmic interviews&quot;. Way too often I see interviews that are basically a single complex/hard question and are supposed to check a wide range of your skills (from basic knowledge through some more advanced theory up to practical skills). The problem here is that if the interviewee has bad luck you won&#39;t evaluate anything. So what if he&#39;s good at anything else if he flunks the only question you asked him?&lt;/p&gt; &lt;h3&gt;Coding on the whiteboard&lt;/h3&gt;&lt;p&gt;No, sorry you won&#39;t convince me here. This *is* retarded. I don&#39;t code on a whiteboard daily, I don&#39;t need to think about a semicolon or missing brackets. I have an IDE that will tell me if I made a typo. I don&#39;t work with whiteboards, why are you evaluating me based on a skill I am not and I will not be using?! Why is there another interview specific skill for which I will have to prepare?! This reminds me of my university days when I had to write ANSI C on a piece of paper and would get failed for forgetting a &quot;;&quot; or writing a &quot;=&quot; instead of &quot;==&quot;. Yeah guess what? I don&#39;t need those skills after all, despite everything my teachers told me. &quot;Oh you will be more productive, oh it will save your *** a lot of times&quot;. Guess what? I have an IDE at work.&lt;/p&gt; &lt;h3&gt;Asking the wrong questions&lt;/h3&gt;&lt;p&gt;Go to amazon or google and search for &quot;programming interview&quot;. Quite a list of results, right? Let me ask one thing - why?! Why are there so many interview specific books/resources out there? Isn&#39;t the interview supposed to evaluate my overall skill as a software engineer? Isn&#39;t it supposed to be based on my work experience (or university courses if we&#39;re talking about new grads) plus what the potential employer needs? Are you telling me my current work is not important and we shouldn&#39;t talk about it? Or that you are not capable of/too lazy to prepare proper questions that will check each candidates skill set? It&#39;s quite offensive, it&#39;s like saying &quot;yeah you have a nice CV here, let&#39;s just completely ignore everything on it&quot; (sometimes they will ask you stuff about it but let&#39;s be honest that&#39;s just small talk before their templated questions will appear). In the past X interviews I underwent not a single person asked me about general coding skills, practices, real life problems etc. It was either algorithms or some random trivia which, I guess, the interviewer just liked (like asking to write a very specific sed command, well the interviewer was highly displeased when I did it in AWK oh well).&lt;/p&gt; &lt;h3&gt;Not checking actual coding skills&lt;/h3&gt;&lt;p&gt;I guess it&#39;s just a special case of &quot;asking the wrong questions&quot; but I feel like it needs a separate paragraph. Here we usually go from one extreme &quot;no coding whatsoever&quot;, through &quot;only short code for the algo task&quot; to the other extreme &quot;I need your full blown github account&quot;. Where did everything between go? I&#39;m applying for a position where I&#39;m supposed to get paid for writing code. How come you are not checking how good I am at that?! What will that 5-15 line long method I had to implement for this clever algorithm tell you? Design/architectural questions? Sure let&#39;s do those! But still drawing some stuff on the whiteboard is different to actual coding. This is interesting because in my career I encountered only maybe 2 or 3 times interviews where I would do actual live coding with the interviewer so he could see how and what am I doing. And only once was I asked to write a programme over the weekend. This is really perplexing why people won&#39;t check for the most basic skill while interviewing you.&lt;/p&gt; &lt;p&gt;Well that was quite a rant, yes sponsored by a failed interview :-) This time it was actually my fault for performing poorly but still most of the points above hold (though in this case an algorithm interview was fully justified). Well I guess I can&#39;t do much more than just to hope for the above trends to just pass so we can move to more reliable/realistic ways of checking if the guy in front of you is fit for the job or not.&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Jul 2014 11:08:00 -0700</pubDate>
        <link>http://www.puroguramingu.com/2014/07/11/on-state-of-it-recruitment.html</link>
        <guid isPermaLink="true">http://www.puroguramingu.com/2014/07/11/on-state-of-it-recruitment.html</guid>
        
        
      </item>
    
      <item>
        <title>Let&#39;s go reactive... In Scala!</title>
        <description>&lt;p&gt;Today&#39;s entry will be rather short and more of an advert than anything else! I really wanted to write this last week but oh well life happens.&lt;/p&gt; &lt;p&gt;I&#39;m pretty sure most of you are already well aware of what &lt;a href=&quot;http://en.wikipedia.org/wiki/Massive_open_online_course&quot;&gt;MOOCs&lt;/a&gt; are and that &lt;a href=&quot;https://www.coursera.org/&quot;&gt;Coursera&lt;/a&gt; is one of the most popular examples (and if you&#39;re not go and check it out, it&#39;s really worth it!).&lt;/p&gt; &lt;p&gt;Last week a great course on &lt;a href=&quot;https://class.coursera.org/progfun-003/class&quot;&gt;Functional Programming in Scala&lt;/a&gt;, done by &lt;b&gt;the&lt;/b&gt; Martin Odersky, was concluded. If you are looking for an easy way to get dirty with FP and/or Scala I think that&#39;s the way to go. You can still check the course/do the assignments even after it&#39;s closed!&lt;/p&gt; &lt;p&gt;But there&#39;s also good news! Last Monday a new course launched &lt;a href=&quot;https://class.coursera.org/reactive-001/class&quot;&gt;Principles of Reactive Programming.&lt;/a&gt; I think we can safely say that this is a continuation of the previous course. Why should you care? Well let&#39;s start with the crew:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;Martin Odersky - the creator of Scala and a huge contributor to the Java language,&lt;/li&gt;&lt;li&gt;Erik Meijer - a person who requires no introduction in FP circles, he also create the Reactive programming framework for .Net while working at MS&lt;/li&gt;&lt;li&gt;Roland Kuhn - leader of the Akka project&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Hard to ask for a better line-up! But ok, &lt;i&gt;what is&lt;/i&gt; this reactive programming? It all started with &lt;a href=&quot;http://www.reactivemanifesto.org/&quot;&gt;the reactive manifesto.&lt;/a&gt; Basically the whole thing tries to address all the problems that are all the rage currently in the industry: handling a lot of data, being always up and running etc. The main points from the manifesto are:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;being &lt;b&gt;event-driven&lt;/b&gt; - this is the main building block which results in a lot of other good things mentioned below. This might sound scary but basically means that we are waiting for something to happen and &lt;b&gt;react&lt;/b&gt; to it when it occurs (for instance you send a message from one server to the other). &lt;li&gt;scalability - who isn&#39;t scalable today? When you&#39;re not scalable then you&#39;re not cool! Reactive programming is supposed to give you the possibility to scale out both horizontally &lt;b&gt;and&lt;/b&gt; vertically since everything has to be very loosely couples and interact with each other only via events. Since FP and RP doesn&#39;t encourage having state then thanks to the event driven architecture adding X more services of the same type is a (in theory) trivial task!.&lt;/li&gt;&lt;li&gt;resilience - since everything is very loosely coupled it, again in theory, shouldn&#39;t be a problem if one part of the system fails.&lt;/li&gt;&lt;li&gt;responsiveness - and we don&#39;t mean that your website will look good on your tablet, PC and mobile phone! Again since the whole system is loosely coupled it shouldn&#39;t be hard to make it so the user doesn&#39;t wait for all the data on the server side to be loaded/computed for hours.&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;This is a &lt;b&gt;very&lt;/b&gt; basic summary of the whole manifesto so I do encourage you to go and read the whole thing! But as you can see the main point here is to change the way you think about architecting your system. It tells you that scalability, failures etc. are not an exception and something that can be quick fixed &lt;b&gt;after&lt;/b&gt; you coded the whole but you should take all of it into considering during your design phase!&lt;/p&gt; &lt;p&gt;The course will be divided into three parts:&lt;/p&gt; &lt;ol&gt;&lt;li&gt;Functional programming - covered by prof. Odersky will be a (very) short review of Scala and FP in general&lt;/li&gt;&lt;li&gt;Futures and reactive programming - Erik Meijer&lt;/li&gt;&lt;li&gt;Actors and distributed actors - Roland Kuhn&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;As a prerequisite you should know some Scala, you can check the list of lectures that were given during the FP/Scala course to get a good view what you should know, but I think that having some background in any FP language will be enough. As I said this course already started last week (on Monday) but it&#39;s not too late to start now! Will it be worth it? Hard to say since this is the first edition but I will definitely post a write-up after it finishes in December (or somewhere along the way should anything interesting appear!).&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Nov 2013 07:25:00 -0800</pubDate>
        <link>http://www.puroguramingu.com/2013/11/10/lets-go-reactive-in-scala.html</link>
        <guid isPermaLink="true">http://www.puroguramingu.com/2013/11/10/lets-go-reactive-in-scala.html</guid>
        
        
      </item>
    
      <item>
        <title>The adorable GOphers</title>
        <description>&lt;p&gt;Last Thursday I had the pleasure of attending Andrew Gerrand&#39;s code lab &quot;Whispering Gophers: networking programming in Go&quot; here in Tokyo. Why is that so fascinating? Well mainly because I think it&#39;s a really cool code lab if you want to see what Go can actually do &lt;b&gt;and&lt;/b&gt; everyone can give it a try. But about that later.&lt;/p&gt; &lt;p&gt;So what is Go and why should you care? According to &lt;a href=&quot;http://golang.org/&quot;&gt;the official website&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt;&lt;i&gt;Go is an open source programming environment that makes it easy to build simple, reliable, and efficient software.&lt;/i&gt;&lt;/blockquote&gt; &lt;p&gt;That&#39;s pretty generic description so let&#39;s expand it:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;was developed at Google in 2007 as an internal language by Robert Griesemer, Rob Pike, and Ken Thompson (yes &lt;b&gt;&lt;i&gt;that&lt;/i&gt;&lt;/b&gt; Ken Thompson)&lt;/li&gt;&lt;li&gt;Go is statically-typed (although it does look dynamic at places thanks to a basic type inferencing system)&lt;/li&gt;&lt;li&gt;has C-style syntax &lt;b&gt;but&lt;/b&gt; with some (minor) &lt;a href=&quot;http://blog.golang.org/gos-declaration-syntax&quot;&gt;fundamental differences&lt;/a&gt;&lt;/li&gt;&lt;li&gt;contrary to C uses automatic memory management&lt;/li&gt;&lt;li&gt;is compiled (but compilation time shouldn&#39;t be a concern. Runtime speed, though, is a completely different story)&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;So is that all? No! There&#39;s much more to it. Some random features that &lt;b&gt;I&lt;/b&gt; personally found interesting include:&lt;/p&gt; &lt;h3&gt;Visibility&lt;/h3&gt; &lt;p&gt;If you&#39;re a C++/Java/C# guy or into a language that has some kind of visibility mechanism like public/protected/package/private you will be surprise that Go does not uses that kind of stuff! Instead visibility in Go is by default at the package level. What to do when you want something to be visible from outside of the package? Uppercase it! That is exactly why this will work:&lt;/p&gt; &lt;pre class=&quot;brush: cpp&quot;&gt;&lt;br /&gt;package main&lt;br /&gt;import &quot;fmt&quot;&lt;br /&gt;&lt;br /&gt;func main() {&lt;br /&gt;    fmt.Println(&quot;Hello, 世界&quot;)&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt; &lt;p&gt;And this will fail:&lt;/p&gt; &lt;pre class=&quot;brush: cpp&quot;&gt;&lt;br /&gt;package main&lt;br /&gt;import &quot;fmt&quot;&lt;br /&gt;&lt;br /&gt;func main() {&lt;br /&gt;    fmt.println(&quot;Hello, 世界&quot;)&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt; &lt;p&gt;At this point all the purity nerds are probably going crazy &quot;how can this be, exposing my internals to the world is worse than killing kittens!&quot;. Well, no. At least not for me! Over the years I come to realise that it does not matter whether you call something directly or using a method as long as it&#39;s all within your code! External API is a obviously completely different but first of all external APIs are much more rare than internal code and second of all for that you have the uppercase convention. Pretty cool little feature that wouldn&#39;t make me generate getters and setters all over my code (although indeed in Java this isn&#39;t so troublesome nowadays thanks to IDEs and stuff like &lt;a href=&quot;http://projectlombok.org/&quot;&gt;Project Lombok&lt;/a&gt;).  &lt;h3&gt;Goroutines and channels&lt;/h3&gt; &lt;p&gt;If you have worked with multithreaded code in the past chances are that you hated it as much as I do. At least that&#39;s the case for most popular programming languages. The boilerplate around it is, usually, just too annoying. Go, though, shines in this regard with it&#39;s inbuilt light threads called &lt;b&gt;Goroutines&lt;/b&gt; and with the mechanism that let&#39;s different goroutines communicate &lt;b&gt;channels&lt;/b&gt;. Channels are the only way goroutines can communicate between eachother. You don&#39;t get any handle or pointer to a goroutine when you create it. Ok but how do you actually spawn a new thread of execution?&lt;/p&gt; &lt;pre class=&quot;brush: cpp&quot;&gt;&lt;br /&gt;package main&lt;br /&gt;import &quot;fmt&quot;&lt;br /&gt;&lt;br /&gt;func myFunction() {&lt;br /&gt;  for i := 0; i &lt; 5; i++ {&lt;br /&gt;    fmt.println(&quot;Woohoo, I&#39;m in a different thread!&quot;)&lt;br /&gt;  }&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;func main() {&lt;br /&gt;  go myFunction()&lt;br /&gt;  for i := 0; i &lt; 5; i++ {  &lt;br /&gt;    fmt.println(&quot;Main thread calling!&quot;)&lt;br /&gt;  }&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt; &lt;p&gt;The code above will make &lt;b&gt;myFunction&lt;/b&gt; to run in concurrently thanks to the use of the &lt;b&gt;go&lt;/b&gt; keyword! That&#39;s really all you need to do! If you would like to communicate between those two you would just need to create a channel:&lt;/p&gt; &lt;pre class=&quot;brush: cpp&quot;&gt;&lt;br /&gt;func compute(channel chan uint64) {&lt;br /&gt;   // do some time consuming computation and put the result to &quot;res&quot;&lt;br /&gt;   channel &lt;- res;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;func UseAGoroutine() {&lt;br /&gt;  channel := make(chan uint64);&lt;br /&gt;  go compute(channel);&lt;br /&gt;  // mind your own business while compute() runs in a different thread&lt;br /&gt;  computed := &lt;- channel;&lt;br /&gt;  // use the computed result in this thread!&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt; &lt;p&gt;Is that easy or is that easy? Actually the above code can be made even more concise since Go supports anonymous functions and has lexical-scope for variables but I will leave that out for now. The best part here is that they are truly lightweight so you don&#39;t have to worry too much about overusing them as they will be properly mapped to OS threads.&lt;/p&gt; &lt;h3&gt;Utilities!&lt;/h3&gt; &lt;p&gt;My take on Go is that it&#39;s trying to be a very modern language which tries to address all the problems development &lt;b&gt;teams&lt;/b&gt; had over the years. &quot;Teams&quot; is very important here, people who all their lives programmed by themselves might not appreciate things like:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;&lt;b&gt;go fmt&lt;/b&gt; - this little thing will format your code according to the standard! Yes, IDEs do that also but usually you need to define all the rules yourself. Yes Python has something very similar with it&#39;s indentation system and... Well that&#39;s one of the reasons I love Python! Despite what anyone can tell you having a concise code is much more important than having this brace here and this brace here just because &lt;b&gt;you&lt;/b&gt; like it that way. Repetitiveness here is good as it speeds up the time you need to read the code!&lt;/li&gt;&lt;li&gt;&lt;b&gt;go test&lt;/b&gt; - yup, Go has a testing feature right out of the box! It definitely isn&#39;t the best thing out there, but it&#39;s still cool that it&#39;s part of the language itself&lt;/li&gt;&lt;li&gt;Go highly recommends creating an environment variable $GOPATH and putting all your projects in $GOPATH/src/mylittleproject/. Why is this cool? Because Go has native support for version control systems! Let&#39;s say you have your project on GitHub and want to download it, what do you do? You just execute &lt;b&gt;go get github.com/user/mylittleproject/&lt;/b&gt;. That&#39;s a pretty neat little feature right that&lt;/li&gt;&lt;li&gt;Deployment! I don&#39;t know about you but in my life deploying things was always a nightmare. Whenever I had to do a deploy I was sure there will be some magical scripts etc. involved. In Go the result of compilation is a single binary file so it all boils down to cross-compiling your project and simply deploying it where you want. No need for external dependencies!&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;There is obviously much, much more good things I didn&#39;t mention here. But I&#39;m pretty sure that once you start reading the materials I will post at the end of this post you&#39;ll find about them.  &lt;h3&gt;The reality slap&lt;/h3&gt; &lt;p&gt;So is Go the best thing ever since &lt;a href=&quot;http://www.youtube.com/watch?v=tgbNymZ7vqY&quot;&gt;The Muppets: Bohemian Rhapsody&lt;/a&gt;? Well, unfortunately, not quite! The list of things &lt;b&gt;I&lt;/b&gt; don&#39;t like in Go goes on and on...  &lt;ul&gt;&lt;li&gt;the name. Seriously, please don&#39;t call things like &quot;D&quot;, &quot;Go&quot; or whatever. It&#39;s a pain in the you know what to find information about such technologies! In case of Go there&#39;s actually already a different language called Go!...&lt;/li&gt;&lt;li&gt;global state - yes, you can use global state in Go! You can try, but you will not convince me that it is a good thing&lt;/li&gt;&lt;li&gt;lack of exceptions - well this isn&#39;t 100% true as there is &lt;b&gt;panic&lt;/b&gt; which basically works like exceptions. The thing is you shouldn&#39;t really use it, from my understanding. As a result you end up returning the, instead of your normal result, an &lt;b&gt;error&lt;/b&gt; objects which then you can use to check if everything went ok. Before I noticed I ended up repeating the same piece of code all over the place (which to say the least wasn&#39;t neither pleasant nor good for the codebase):&lt;/li&gt;&lt;pre class=&quot;brush: cpp&quot;&gt;&lt;br /&gt;v, err = something.SomethingThatMightReturnAnError()&lt;br /&gt;if err != nil {&lt;br /&gt;  //handle me like one of your French exceptions&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;li&gt;everything is an error. On would think that this is good, because the creators are strict but seeing how they are inconsistent at times themselves (for instance the above error mechanism can be silenced like it is in the case of fmt.Println which does return an error object!) and how really annoying this is during development I&#39;d really appreciate being able to make it less strict. Now even unused imports/variables will make your code fail&lt;/li&gt;&lt;li&gt;no generics - one would think &quot;how is this possible in this day and age?&quot; but that&#39;s the harsh reality. Go does not have generics! One might argue it&#39;s better to have no generics than to have stuff similar to Java&#39;s generics, but it&#39;s really painful to write code without them. So how do you write that generic &lt;b&gt;max(T el1, T el2)&lt;/b&gt; method? You don&#39;t. You write a lot of them, one for each type! Ok I am not being 100% fair here because there are ways to go around this, fo instance using &lt;b&gt;interface{}&lt;/b&gt; but it&#39;s not really the most pleasant way out!&lt;/li&gt;&lt;li&gt;because of the things I mentioned above and some other reasons it simply does not feel DRY enough and the last thing I want in my codebase is repetitive code&lt;/li&gt;&lt;li&gt;it has pointer. Ok this is more of a joke but I do have nightmares where I am back at Uni and take my C class&lt;/li&gt;&lt;/ul&gt; &lt;h3&gt;So in the end...?&lt;/h3&gt; &lt;p&gt;It&#39;s been already 6 years since Go was created and it still didn&#39;t get that much traction. Yes, yes according to some articles etc. it did get the most users in X amount of time blah blah blah but still almost no one knows about it and even less people are using it!  Still, I encourage you to check it out. Especially if you&#39;re looking for something between C and Java and/or want to develop highly concurrent apps! You might not be disappointed!  How to start?&lt;/p&gt; &lt;ol&gt;&lt;li&gt;&lt;a href=&quot;http://tour.golang.org/#1&quot;&gt;A tour of Go&lt;/a&gt; will get you started with the basic syntax and constructs&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://golang.org/ref/spec&quot;&gt;The spec&lt;/a&gt; will comfort you when you&#39;re sad&lt;/li&gt;&lt;li&gt;As I mentioned &lt;a href=&quot;https://code.google.com/p/whispering-gophers/&quot;&gt;the whispering gophers&lt;/a&gt; code lab is available online for everyone! The slides will take you step by step through setting up your machine, getting the necessary code and every single exercise. It&#39;s a great place to learn about goroutines, channels and how a basic gossip protocol works!&lt;/li&gt;&lt;li&gt;You might or not be aware of this but MIT (yes, &lt;b&gt;the MIT&lt;/b&gt;) rewrote it&#39;s whole &lt;a href=&quot;http://pdos.csail.mit.edu/6.824/&quot;&gt;6.824: Distributed Systems&lt;/a&gt; lab in Go! After finishing the above materials dive into the wonderful world of &lt;a href=&quot;http://en.wikipedia.org/wiki/Paxos_(computer_science)&quot;&gt;Paxos&lt;/a&gt; based sharded key-value stores in Go! Personally I did only the first two labs but they were more than worth it and I&#39;m really tempted to finish the remaining 3&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;As always I&#39;m looking forward to hearing your feedback, especially if you used Go in production!&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Oct 2013 09:55:00 -0700</pubDate>
        <link>http://www.puroguramingu.com/2013/10/26/the-adorable-gophers.html</link>
        <guid isPermaLink="true">http://www.puroguramingu.com/2013/10/26/the-adorable-gophers.html</guid>
        
        
      </item>
    
      <item>
        <title>Which embedded key-value store to use? Or the curse of too much choice...</title>
        <description>&lt;p&gt;One of my first tasks at my new job (which I just started) was to create a service exposing a key-value store for storing BLOBs. The natural question was should I use our current database (H2) or something else.&lt;/p&gt;The requirements were simple: &lt;ol&gt;&lt;li&gt;&lt;b&gt;embeddable&lt;/b&gt; Java solution (as we are making packaged software and don&#39;t really need the extra problems related to setting up a DB running in a separate process)&lt;/li&gt;&lt;li&gt;&lt;b&gt;license&lt;/b&gt; allowing us to use it in a commercial product (something along the lines of Apache License 2.0)&lt;/li&gt;&lt;li&gt;&lt;b&gt;not in-memory&lt;/b&gt; (sounded simply wrong for BLOBs)&lt;/li&gt;&lt;li&gt;&lt;b&gt;scalable&lt;/b&gt; (both horizontally and vertically)&lt;/li&gt;&lt;li&gt;&lt;b&gt;simple&lt;/b&gt; to set-up, use and well documented&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Simple, right? Well the problem with simple problems is that there are too many ways to solve them. If you google for a &quot;key value store&quot; the number of possibilities will crush you. Numbers 1, 2 and 3 from the above list made the choice much easier (MongoDB, CouchDB, Hazelcast, Memchached, Riak, Redis, Berkeley DB, Neo4J etc. all failed at at least one of them) but still I was left with:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;H2&lt;/li&gt;&lt;li&gt;Voldemort&lt;/li&gt;&lt;li&gt;OrientDB&lt;/li&gt;&lt;li&gt;Cassandra&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;And &lt;b&gt;many&lt;/b&gt; others which I flat out rejected on a gut feeling (sorry, I won&#39;t be able to go to a customer and tell him we&#39;re using &lt;a href=&quot;http://people.apache.org/~kalle/bananadb/&quot;&gt;BananaDB&lt;/a&gt;).&lt;/p&gt; &lt;p&gt;If you&#39;re interested in some code or you&#39;d like to see how the (very) basic configuration looks like I&#39;m trying them out on my &lt;a href=&quot;https://github.com/mdymczyk/DBTesting&quot;&gt;GitHub repo&lt;/a&gt; (although currently there&#39;s only very basic OrientDB setup commited). So how do the above compare?&lt;/p&gt;&lt;h3&gt;&lt;a href=&quot;http://www.orientdb.org/&quot;&gt;OrientDB&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;OrientDB is an interesting NoSQL DBMS which stores data as documents but also allows direct relations between them like in graph databases. It also can work as a &lt;a href=&quot;https://github.com/orientechnologies/orientdb/wiki/Key-Value-engine&quot;&gt;key-value engine!&lt;/a&gt; The creators say it&#39;s secure, web ready (by which they mean native JSON REST over HTTP support) and scalable. They claim to support schema-less mode, schema-full or a mix of both, ACID transaction and some other goodies.&lt;/p&gt;  &lt;ul&gt;&lt;li&gt;&lt;b&gt;What do you need to get started:&lt;/b&gt;&lt;ul&gt;  &lt;li&gt;&lt;a href=&quot;https://github.com/mdymczyk/DBTesting/blob/master/src/main/resources/orientdb/orientdb.config&quot;&gt;orientdb.config&lt;/a&gt;&lt;/li&gt;  &lt;li&gt;according to the doc: &lt;b&gt;orientdb-enterprise-*.jar&lt;/b&gt; &amp;&amp; &lt;b&gt;orientdb-server-*.jar&lt;/b&gt; (in practice you better use a build tool like Maven or Gradle since there are quite a few dependencies)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Ease of use:&lt;/b&gt; starting the server, creating/opening a DB and saving your first records is &lt;a href=&quot;https://github.com/mdymczyk/DBTesting/blob/master/src/main/java/com/dymczyk/orientdb/EmbeddedOrientDB.java&quot;&gt;a matter of only few lines&lt;/a&gt;. &lt;li&gt;&lt;b&gt;Documentation:&lt;/b&gt; sometimes lacking, at some points it&#39;s confusing whether it is still up-to-date or is it a page for an old version (mainly the google code docs). Overall passable.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Adoption:&lt;/b&gt; weak. The DB has already 3 years (since the initial release) but I failed to find a single well known company using it.&lt;/li&gt;&lt;li&gt;&lt;b&gt;License:&lt;/b&gt; Apache 2.0&lt;/li&gt;&lt;li&gt;&lt;b&gt;Protocol:&lt;/b&gt; HTTP and binary&lt;/li&gt;&lt;li&gt;&lt;b&gt;Misc:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;it uses a new interesting MVRB-Tree indexing algorithm that allows to store multiple values in a single tree node (opposite to only 1 value per node in RB Trees) and thanks to which both inserts and lookups are supposed to be fast &lt;/li&gt;&lt;li&gt;requires the new network node to have &lt;b&gt;identical db&lt;/b&gt; before adding it to the network. I don&#39;t really see how this plays with the &quot;scalable&quot; part of OrientDB.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;When to use:&lt;/b&gt; the basic case would be a very simple KV store. OrientDB fits here nicely as the MVRB indexing will make it fast. As a graph db on the other hand it goes well with any sort of data that is connected using complex relations (social networks anyone? but also applications handling geographical or routing data).&lt;/li&gt;&lt;/ul&gt; &lt;h3&gt;&lt;a href=&quot;http://www.h2database.com/html/main.html&quot;&gt;H2&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Contrary to the other options I am considering here H2 is the only RDBMS. Frankly speaking the only reason I put it up here is because we already are using a H2 DB in our software and it might just turn out good enough. H2 seems like a fairly standard RDBMS which can be embedded in Java application. It supports a subset of SQL, mainly relies on it and JDBC, can be used both as in-memory and disk-based &lt;/p&gt;  &lt;ul&gt;&lt;li&gt;&lt;b&gt;What do you need to get started:&lt;/b&gt;&lt;ul&gt;  &lt;li&gt;h2*.jar - then simply launch the server in 1 line of code and get a JDBC Data Source.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Ease of use:&lt;/b&gt; installation is one jar, starting up the whole thing is few lines of code. Rest is plain old JDBC or you can use an ORM, what can be easier?&lt;/li&gt;&lt;li&gt;&lt;b&gt;Documentation:&lt;/b&gt; well written and maintained&lt;/li&gt;&lt;li&gt;&lt;b&gt;Adoption:&lt;/b&gt; well it&#39;s no Cassandra but the &lt;a href=&quot;http://www.h2database.com/html/links.html&quot;&gt;list of projects&lt;/a&gt; using it still looks well&lt;/li&gt;&lt;li&gt;&lt;b&gt;License:&lt;/b&gt; dual licensed under the MPL 1.1 (Mozilla Public License) or the (unmodified) EPL 1.0&lt;/li&gt;&lt;li&gt;&lt;b&gt;Protocol:&lt;/b&gt; PostgreSQL server side network protocol&lt;/li&gt;&lt;li&gt;&lt;b&gt;Misc:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;this is still a RDBMS which means it has to be (or at least should be in theory) slower than the NoSQL solutions due to join and ACID support (though Orient DB also is supposed to have that one)&lt;/li&gt;&lt;li&gt;it seems to support only a very basic HA model&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;When to use:&lt;/b&gt; when you need a mature, fast DB that supports all the RDBMs goodness (mainly ACID, joins and normalization) and you don&#39;t necessarily need to handle very large amounts of unstructured data (and no, by very large I don&#39;t mean 1GB...)&lt;/li&gt;&lt;/ul&gt;&lt;br&gt; &lt;h3&gt;&lt;a href=&quot;&quot;&gt;Cassandra&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Cassandra is a &quot;BigTable meets Dynamo&quot; Java database initially created at Facebook. By that I mean it has a Dynamo-like architecture and BigTable-like data model (columns and column families). It&#39;s main goals are high (linear) scalability across a large network (spanning over multiple data centres) of commodity devices. It provides a masterless architecture which also supports asynchronous replication of data. If you&#39;re looking for joins or subqueries you better keep on searching! Unless you&#39;re using batch Hadoop analysis.&lt;/p&gt;  &lt;ul&gt;&lt;li&gt;&lt;b&gt;What do you need to get started:&lt;/b&gt;&lt;ul&gt;  &lt;li&gt;&lt;a href=&quot;http://cassandra.apache.org/&quot;&gt;sources&lt;/a&gt; and a cassandra.yaml config file&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Ease of use:&lt;/b&gt; here it&#39;s actually a bit more tricky than OrientDB. Setting up the CassandraDaemon and cleaning up after it seems a bit more complicated but there seem to already be &lt;a href=&quot;https://github.com/hector-client/hector/blob/master/test/src/main/java/me/prettyprint/hector/testutils/EmbeddedServerHelper.java&quot;&gt;open source helpers doing that for you&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Documentation:&lt;/b&gt; looking good, detailed and well maintained. Even if the documentation is not enough, there&#39;s plenty of information online about Cassandra because of all the hype it generated in the past few years.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Adoption:&lt;/b&gt; the list of companies using Cassandra seems to just go on and on.&lt;/li&gt;&lt;li&gt;&lt;b&gt;License:&lt;/b&gt; Apache 2.0&lt;/li&gt;&lt;li&gt;&lt;b&gt;Protocol:&lt;/b&gt; Thrift and binary CQL3&lt;/li&gt;&lt;li&gt;&lt;b&gt;Misc:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;writes faster than reads&lt;/li&gt;&lt;li&gt;easy to set the tradeoff between distribution and replication&lt;/li&gt;&lt;li&gt;great replication capabilities&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;When to use:&lt;/b&gt; since writes are here faster than reads it seems great for things like log storing applications or any other case of data analysis.&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;h3&gt;&lt;a href=&quot;http://www.project-voldemort.com/&quot;&gt;Voldemort&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Voldemort is an open source implementation of Amazon&#39;s &lt;a href=&quot;http://en.wikipedia.org/wiki/Dynamo_(storage_system)&quot;&gt;DynamoDB&lt;/a&gt; developed by the guys at LinkedIn (apparently one of the contributors actually worked on Dynamo) with scalability and high performance in mind. Apparently it gives linear scalability and one of the lowest latencies. To tell you the truth I was really looking forward to this solution and was a bit biased towards it but... &lt;br&gt;&lt;br&gt;It seems the guys at LinkedIn don&#39;t like to couple their projects with Maven and they don&#39;t think that deploying their ant projects to a maven repository is a high priority. For most people it might not be a problem, for me it meant that, for now, it&#39;s a no-go. &lt;/p&gt;  &lt;ul&gt;&lt;li&gt;&lt;b&gt;What do you need to get started:&lt;/b&gt;&lt;ul&gt;  &lt;li&gt;&lt;a href=&quot;http://www.project-voldemort.com/voldemort/quickstart.html&quot;&gt;3 config files and the jar file&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Ease of use:&lt;/b&gt; if it wasn&#39;t for the &quot;we don&#39;t like Maven enough to care about it&quot; policy the whole user experience would be a breeze.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Documentation:&lt;/b&gt; although it looks smaller than Orient&#39;s in fact it seems to have everything you need to get started. Also it seems to be well maintained so you shouldn&#39;t be confused what&#39;s outdated and what&#39;s not.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Adoption:&lt;/b&gt; LinkedIn and... LinkedIn?&lt;/li&gt;&lt;li&gt;&lt;b&gt;License:&lt;/b&gt; Apache 2.0&lt;/li&gt;&lt;li&gt;&lt;b&gt;Protocol:&lt;/b&gt; HTTP and bare TCP/IP&lt;/li&gt;&lt;li&gt;&lt;b&gt;Misc:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;linear scalability&lt;/li&gt;&lt;li&gt;great latency&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;When to use:&lt;/b&gt; with it&#39;s replication system and the fact that each node is equal it seems like a great candidate for systems which can be at times under heavy usage by the users and where losing data wouldn&#39;t be favourable but when we can wait a bit for eventual consistency to kick-in. How about a shopping cart at a large store? &lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;br&gt;&lt;h3&gt;Conclusions?&lt;/h3&gt;&lt;p&gt;For the time being (until Voldemort gets a Maven artifact or we decide to migrate all our data to a NoSQL database in which case Cassandra would be a good fit) I will try to convince my team to use OrientDB:  &lt;ul&gt;&lt;li&gt;easy to set up. Contrary to Cassandra and Voldemort (lack of maven artifact).&lt;/li&gt;  &lt;li&gt;distributed architecture with HA out of the box (or at least that&#39;s what they say)&lt;/li&gt;&lt;li&gt;fast (thanks to the MVRB Tree algorithm)&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Oct 2013 06:15:00 -0700</pubDate>
        <link>http://www.puroguramingu.com/2013/10/14/which-embedded-key-value-store-to-use.html</link>
        <guid isPermaLink="true">http://www.puroguramingu.com/2013/10/14/which-embedded-key-value-store-to-use.html</guid>
        
        <category>database</category>
        
        <category>embedded</category>
        
        <category>nosql</category>
        
        <category>rdbms</category>
        
        <category>java</category>
        
        <category>key-value</category>
        
        
      </item>
    
      <item>
        <title>Lasciate ogni speranza, voi ch&#39;entrate.</title>
        <description>&lt;pre class=&quot;brush:java;&quot;&gt;&lt;br /&gt;class Welcome {&lt;br /&gt;  public static void main(String[] args) {&lt;br /&gt;    System.out.println(&quot;Hello, 世界!&quot;);&lt;br /&gt;  }&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;br&gt;Hello and welcome! It took me a bit longer than I initially planned (only around a few years longer) but finally I took the time to put together this blog. &lt;br&gt;&lt;br&gt;Knowing me it will be rarely updated (you can find out about what I will be blogging in the About section), but hopefully I will be done with my first (real) entry in a few days. Stay tuned!
</description>
        <pubDate>Sat, 12 Oct 2013 05:23:00 -0700</pubDate>
        <link>http://www.puroguramingu.com/2013/10/12/lasciate-ogni-speranza-voi-chentrate.html</link>
        <guid isPermaLink="true">http://www.puroguramingu.com/2013/10/12/lasciate-ogni-speranza-voi-chentrate.html</guid>
        
        
      </item>
    
  </channel>
</rss>
